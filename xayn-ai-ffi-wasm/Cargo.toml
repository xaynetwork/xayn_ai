[package]
name = "xayn-ai-ffi-wasm"
version = "0.1.0"
authors = ["Xayn Engineering <engineering@xaynet.dev>"]
edition = "2018"

[dependencies]
console_error_panic_hook = "0.1.7"
getrandom = { version = "0.2.4", features = ["js"] }
js-sys = "0.3.55"
serde = { version = "1.0.133", features = ["derive"] }
wasm-bindgen = { version = "=0.2.78", features = ["serde-serialize"] }
xayn-ai-ffi = { path = "../xayn-ai-ffi" }

# We use the "atomics" `target_feature` to enable parallelism instead of a
# crate feature. This is necessary, as using a "normal" feature will break
# "cargo clippy --all-targets --all-features" and similar. Furthermore we
# always want to use parallelism if our target supports it, which this
# setups represents fairly well.
[target.'cfg(all(target_arch = "wasm32", target_feature = "atomics"))'.dependencies]
wasm-bindgen-rayon = "1.0.3"
xayn-ai = { path = "../xayn-ai", features = ["multithreaded"] }

[target.'cfg(not(all(target_arch = "wasm32", target_feature = "atomics")))'.dependencies]
xayn-ai = { path = "../xayn-ai" }

[dev-dependencies]
itertools = "0.10.3"
wasm-bindgen-test = "0.3.28"

[lib]
crate-type = ["cdylib"]

[package.metadata.wasm-pack.profile.profiling]
# -g is required to keep the original function names
wasm-opt = ['-O', '-g']

[package.metadata.wasm-pack.profile.release]
wasm-opt = ['-Oz']

[features]
default = ["browser"]
browser = []
node = []
