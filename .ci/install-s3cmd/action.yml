name: 's3cmd'
description: 'Installs s3cmd'
inputs:
  access-key:
    description: 'Bucket access key'
    required: true
  secret-key:
    description: 'Bucket secret key'
    required: true
runs:
  using: "composite"
  steps:
    - shell: bash
      env:
        S3CMD_VERSION: 2.1.0
      run: |
        echo "::add-mask::${{ inputs.access-key }}"
        echo "::add-mask::${{ inputs.secret-key }}"

        if [ ${{ runner.os }} == "Linux" ]; then
          pip install s3cmd==${{ env.S3CMD_VERSION }}
        else
          echo "::error s3cmd for ${{ runner.os }} is not supported"
          exit 1
        fi

        cat <<EOT >> $HOME/.s3cfg
        [default]
        access_key = ${{ inputs.access-key }}
        access_token = 
        add_encoding_exts = 
        add_headers = 
        bucket_location = de
        ca_certs_file = 
        cache_file = 
        check_ssl_certificate = True
        check_ssl_hostname = True
        cloudfront_host = cloudfront.amazonaws.com
        connection_pooling = True
        content_disposition = 
        content_type = 
        default_mime_type = binary/octet-stream
        delay_updates = False
        delete_after = False
        delete_after_fetch = False
        delete_removed = False
        dry_run = False
        enable_multipart = True
        encoding = UTF-8
        encrypt = False
        expiry_date = 
        expiry_days = 
        expiry_prefix = 
        follow_symlinks = False
        force = False
        get_continue = False
        gpg_command = /usr/bin/gpg
        gpg_decrypt = %(gpg_command)s -d --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(iut_file)s
        gpg_encrypt = %(gpg_command)s -c --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(iut_file)s
        gpg_passphrase = 
        guess_mime_type = True
        host_base = s3-de-central.profitbricks.com
        host_bucket = %(bucket)s.s3-de-central.profitbricks.com
        human_readable_sizes = False
        invalidate_default_index_on_cf = False
        invalidate_default_index_root_on_cf = True
        invalidate_on_cf = False
        kms_key = 
        limit = -1
        limitrate = 0
        list_md5 = False
        log_target_prefix = 
        long_listing = False
        max_delete = -1
        mime_type = 
        multipart_chunk_size_mb = 15
        multipart_max_chunks = 10000
        preserve_attrs = True
        progress_meter = True
        proxy_host = 
        proxy_port = 0
        public_url_use_https = False
        put_continue = False
        recursive = False
        recv_chunk = 65536
        reduced_redundancy = False
        requester_pays = False
        restore_days = 1
        restore_priority = Standard
        secret_key = ${{ inputs.secret-key }}
        send_chunk = 65536
        server_side_encryption = False
        signature_v2 = False
        signurl_use_https = False
        simpledb_host = sdb.amazonaws.com
        skip_existing = False
        socket_timeout = 300
        stats = False
        stop_on_error = False
        storage_class = 
        throttle_max = 100
        upload_id = 
        urlencoding_mode = normal
        use_http_expect = False
        use_https = True
        use_mime_magic = True
        verbosity = WARNING
        website_endpoint = http://%(bucket)s.s3-website-%(location)s.amazonaws.com/
        website_error = 
        website_index = index.html
        EOT
