name: 'build asset artifacts'
description: 'Builds asset artifacts'
inputs:
  dart-ws:
    description: 'The Dart workspace'
    required: true
  wasm-out-dir-path:
    description: 'The relative path (wrt the repository root) of the WASM artifacts.'
    required: false
  wasm-sequential-version:
    description: 'The version of the `sequential` WASM artifacts.'
    required: false
  wasm-parallel-version:
    description: 'The version of the `parallel` WASM artifacts.'
    required: false
outputs:
  dart-base-assets:
    description: "The relative path (wrt the repository root) of the Dart base assets manifest."
    value: ${{ steps.artifact-paths.outputs.dart-base-assets }}
  dart-web-assets:
    description: "The relative path (wrt the repository root) of the Dart web assets manifest."
    value: ${{ steps.artifact-paths.outputs.dart-web-assets }}
  json-metadata:
    description: "The relative path (wrt the repository root) of the JSON manifest."
    value: ${{ steps.artifact-paths.outputs.json-metadata }}
  chunks-dir:
    description: "The relative path (wrt the repository root) of the directory where the chunks of the data assets are stored."
    value: ${{ steps.artifact-paths.outputs.chunks-dir }}
runs:
  using: "composite"
  steps:
    - id: artifact-paths
      shell: bash
      run: |
        echo "::set-output name=dart-base-assets::$(echo ${{ inputs.dart-ws }}/lib/src/common/reranker/assets.dart)"
        echo "::set-output name=dart-web-assets::$(echo ${{ inputs.dart-ws }}/lib/src/web/reranker/assets.dart)"
        echo "::set-output name=json-metadata::out/assets_metadata.json"
        echo "::set-output name=chunks-dir::data/chunks"

    - shell: bash
      run: |
        if [ ${{ runner.os }} == "macOS" ]; then
          # installs gsplit
          brew install coreutils
        fi

        bash generate_assets_metadata.sh assets_manifest.json ${{ inputs.wasm-out-dir-path }} ${{ inputs.wasm-sequential-version }} ${{ inputs.wasm-parallel-version }}

        echo "::group::Dart base assets manifest"
        cat ${{ steps.artifact-paths.outputs.dart-base-assets }}
        echo "::endgroup::"
        echo "::group::Dart web assets manifest"
        cat ${{ steps.artifact-paths.outputs.dart-web-assets }}
        echo "::endgroup::"
        echo "::group::JSON metadata"
        cat ${{ steps.artifact-paths.outputs.json-metadata }}
        echo "::endgroup::"
